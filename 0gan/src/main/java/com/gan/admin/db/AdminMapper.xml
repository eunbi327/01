<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="admin">
	<insert id="insertAdmin">
		insert into adm_tb values(seq_admin.nextval, #{adm_id}, #{adm_pwd})
	</insert>
	<select id="selectAdmin" resultType="adminVo">
		select * from adm_tb where adm_id = #{username}
	</select>
	<!-- # 공지사항 관련 -->
	<!-- 공지사항List by 박권익 -->
	<select id="selectAllNoti" resultType="notiVo">
		select noti_num,
		noti_title, noti_date
		from (select rownum rank, noti_num, noti_title,
		noti_date
		from noti_tb)
		order by rank desc
	</select>
	<!-- 공지사항 VO by 박권익 -->
	<select id="selectNoti" resultType="notiVo">
		select * from noti_tb where
		noti_num = #{noti_num}
	</select>
	<!-- 공지사항 등록 by 박권익 -->
	<insert id="insertNoti">
		insert into noti_tb values(seq_noti.nextval,
		#{noti_title}, #{noti_content}, #{noti_file}, systimestamp)
	</insert>
	<!-- 공지사항 삭제 by 박권익 -->
	<delete id="deleteNoti">
		delete noti_tb where noti_num = #{noti_num}
	</delete>
	<!-- 공지사항 수정 by 박권익 -->
	<update id="updateNoti">
		update noti_tb
		set noti_title = #{noti_title},
		noti_content = #{noti_content}, noti_file = #{noti_file}, noti_date =
		systimestamp
		where noti_num = #{noti_num}
	</update>

	<!-- # 도움말 관련 -->
	<!-- 도움말List by 박권익 -->
	<select id="selectAllFaq" resultType="FaqVo">
		select faq_num, faq_title,
		faq_category from (select rownum rank, faq_num, faq_title,
		faq_category from faq_tb) order by rank desc
	</select>
	<!-- 도움말 VO by 박권익 -->
	<select id="selectFaq" resultType="FaqVo">
		select * from faq_tb where
		faq_num = #{faq_num}
	</select>
	<!-- 도움말 등록 -->
	<insert id="insertFaq">
		insert into faq_tb values(seq_faq.nextval,
		#{faq_title}, #{faq_content}, #{faq_category}, #{faq_file})
	</insert>
	<!-- 도움말 삭제 by 박권익 -->
	<delete id="deleteFaq">
		delete faq_tb where faq_num = #{faq_num}
	</delete>
	<!-- 도움말 수정 by 박권익 -->
	<update id="updateFaq">
		update faq_tb
		set faq_title = #{faq_title},
		faq_content = #{faq_content}, faq_category = #{faq_category}, faq_file
		= #{faq_file}
		where faq_num = #{faq_num}
	</update>
	<!-- # 1대1문의 관련 -->
	<!-- 1대1문의List by 박권익 -->
	<select id="selectAllAdmQue" resultType="admQueVo">
		select adm_que_num,
		user_num, adm_que_writer,
		adm_que_title, adm_que_content, adm_que_file,
		adm_que_date,
		adm_que_check
		from (select rownum rank, adm_que_num,
		user_num, adm_que_writer,
		adm_que_title, adm_que_content, adm_que_file,
		adm_que_date,
		adm_que_check from adm_que_tb)
		order by rank desc
	</select>
	<!-- 1대1문의 정보 by 박권익 -->
	<select id="selectAdmQue" resultType="admQueVo">
		select * from adm_que_tb
		where adm_que_num = #{adm_que_num}
	</select>
	<!-- 1대1문의 답변 정보 by 박권익 -->
	<select id="selectAdmAns" resultType="admAnsVo">
		select * from adm_ans_tb
		where adm_que_num = #{adm_que_num}
	</select>
	<!-- 1대1문의 답변 등록 by 박권익 -->
	<insert id="insertAdmAns">
		insert into adm_ans_tb values(seq_adm_ans.nextval,
		#{adm_que_num}, #{user_num}, #{adm_ans_title}, #{adm_ans_content},
		#{adm_ans_file}, systimestamp)
	</insert>
	<!-- 1대1문의 답변 수정 by 박권익 -->
	<update id="updateAdmAns">
		update adm_ans_tb
		set adm_ans_title =
		#{adm_ans_title}, adm_ans_content = #{adm_ans_content}, adm_ans_file =
		#{adm_ans_file}, adm_ans_date = systimestamp
		where adm_que_num =
		#{adm_que_num}
	</update>
	<!-- 1대1문의 답변여부 변경 by 박권익 -->
	<update id="updateAdmQueCheck">
		update adm_que_tb set adm_que_check = 'Y' where
		adm_que_num = #{adm_que_num}
	</update>
	<!-- #기획전 관련 -->
	<!-- 기획전 목록 by 박권익 -->
	<select id="selectAllTheme" resultType="themeVo">
		select * from theme_tb
	</select>
	<!-- 기획전 정보 by 박권익 -->
	<select id="selectTheme" resultType="themeVo">
		select * from theme_tb where
		theme_num = #{theme_num}
	</select>
	<!-- 공간정보 가져오기 by 박권익 -->
	<select id="selectPlace" resultType="java.util.Map">
		select place_num,
		place_name, place_category, place_addr from place_tb
		minus
		select place_tb.place_num, place_name, place_category, place_addr from
		place_tb, theme_place_tb where place_tb.place_num =
		theme_place_tb.place_num and theme_num = #{theme_num}
	</select>
	<!-- 기획전에 등록된 장소 정보 가져오기 -->
	<select id="selectAllThemePlace" resultType="java.util.Map">
		select
		place_tb.place_num, place_name, place_category, place_addr from
		place_tb, theme_place_tb where place_tb.place_num =
		theme_place_tb.place_num and theme_num = #{theme_num} order by
		place_tb.place_num
	</select>
	<!-- 기획전 등록 by 박권익 -->
	<insert id="insertTheme">
		insert into theme_tb values(seq_theme.nextval,
		#{theme_title}, #{theme_content}, #{theme_file}, systimestamp)
	</insert>
	<!-- 기획전 장소 등록 by 박권익 -->
	<insert id="insertThemePlace">
		insert into theme_place_tb
		values(seq_theme_place.nextval, #{theme_num}, #{place_num})
	</insert>
	<!-- 기획전 수정 by 박권익 -->
	<update id="updateTheme">
		update theme_tb
		set theme_title = #{theme_title}, theme_content = #{theme_content},
		theme_file = #{theme_file}, theme_date = systimestamp
		where theme_num = #{theme_num}
	</update>
	<!-- 기획전 삭제 by 박권익 -->
	<delete id="deleteTheme">
		delete theme_tb where theme_num = #{theme_num}
	</delete>
	<!-- 기획전 장소 삭제 by 박권익 -->
	<delete id="deleteThemePlace">
		delete theme_place_tb where theme_num = #{theme_num}
		and place_num = #{place_num}
	</delete>
	
	<!-- 회원 정보 조회 by 신용주 -->
	<select id="selectAllUser" resultType="userVo">
		select * from user_tb
	</select>
	<!-- 회원 상세 정보 조회 by 신용주 -->
	<select id="selectOneUser" resultType="userVo">
		select *
		from  user_tb u
		where user_num=#{user_num} 
	</select>
	<!-- 회원 상세 정보 by 신용주 -->
	<select id="selectOneUserInfo" resultType="java.util.Map">
		select l.login_state, l.login_date, sl.sns_login_num, sl.sns_ver, u.user_mk_date, u.user_mod_date, u.user_agree
		from  user_tb u, login_tb l, sns_login_tb sl
		where u.user_num = l.user_num and l.user_num = sl.user_num 	    
	    and u.user_num=#{user_num}
	</select>
	<!-- 회원 예약 상세 정보 조회 by 신용주 -->
	<select id="selectUserRsvt" resultType="java.util.Map">
		select r.rsvt_num, (r.rsvt_checkin|| '~' || r.rsvt_checkout) as rsvt_time, p.place_name, p.place_category, p.place_addr, r.rsvt_state 
		from  rsvt_tb r, place_tb p 
		where r.user_num = p.host_user_num 
		and r.user_num=#{user_num}
	</select>
	<!-- 회원 등급 수정 by 신용주 -->
	<update id="updateUserGrade" parameterType="userVo">
		update user_tb set user_grade=#{user_grade} where user_num=#{user_num}	
	</update>	
	<!-- 공간 목록 조회 by 신용주 -->
	<select id="selectAllPlace" resultType="java.util.Map">
		select p.place_num, p.place_name, u.user_email, u.user_name, p.place_category, p.place_addr 
		from  user_tb u, place_tb p
		where u.user_num = p.host_user_num 
	    <if test="place_num != null">
	       and place_num=#{place_num}
	  	</if>
	</select>
	<!-- 예약 목록 조회 by 신용주 -->
	<select id="selectAllRsvt" resultType="java.util.Map">
		select r.rsvt_num, u.user_name, u.user_tel, u.user_email, r.rsvt_checkin, r.rsvt_state
		from  user_tb u, rsvt_tb r
		where u.user_num = r.user_num 
	    <if test="user_num != null">
	       and user_num=#{user_num}
	  	</if>
	</select>
	<!-- 전체 매출 조회 by 신용주 -->
	<select id="selectTotalSales" resultType="java.util.Map">
		select distinct
			((select sum(rsvt_total_price) from rsvt_tb)-(nvl((select sum(rsvt_total_price) from rsvt_tb where rsvt_state like '%취소%'), 0))) as rsvt_tot_sales,
			(select count(rsvt_num) from rsvt_tb) as rsvt_cnt,
			(select sum(rsvt_total_price) from rsvt_tb) as rsvt_sales,
			(select count(rsvt_num) from rsvt_tb where rsvt_state like '%취소%') as rsvt_cancle_cnt,
			nvl((select sum(rsvt_total_price) from rsvt_tb where rsvt_state like '%취소%'), 0) as rsvt_cancle
		from  rsvt_tb
	</select>
	<!-- 공간별 매출 조회 by 신용주 -->
	<select id="selectPlaceSalesDetail" resultType="java.util.Map">
		select distinct(p.place_num), p.place_name,
			((select sum(rsvt_total_price) from rsvt_tb where place_num = #{place_num})
			-(nvl((select sum(rsvt_total_price) from rsvt_tb where rsvt_state like '%취소%' and place_num = #{place_num}), 0))) as rsvt_tot_sales, 
			(select count(rsvt_num) from rsvt_tb where place_num = #{place_num}) as rsvt_cnt,
			(select sum(rsvt_total_price) from rsvt_tb where place_num = #{place_num}) as rsvt_sales,
			(select count(rsvt_num) from rsvt_tb where rsvt_state like '%취소%' and place_num = #{place_num}) as rsvt_cancle_cnt,
			nvl((select sum(rsvt_total_price) from rsvt_tb where rsvt_state like '%취소%' and place_num = #{place_num}), 0) as rsvt_cancle
		from  rsvt_tb r, place_tb p
		where r.place_num = p.place_num 
		and r.place_num=#{place_num}
	</select>
	<!-- 호스트별 매출 조회 by 신용주 -->
	<select id="selectHostSales" resultType="java.util.Map">
		select h.host_user_num, u.user_email, u.user_name, u.user_tel, h.host_biz_name  
		from  user_tb u, host_tb h
		where u.user_num = h.host_user_num
	    <if test="host_user_num != null">
	       and h.host_user_num=#{host_user_num}
	  	</if>
	</select>
	<!-- 호스트 보유 공간 조회 by 신용주 -->
	<select id="selectHostPlace" resultType="java.util.Map">
		select p.place_num, p.place_name, p.place_price, p.place_price_pack, p.place_category, p.place_addr
		from  user_tb u, place_tb p
		where (u.user_num = p.host_user_num) 
		and p.host_user_num=#{host_user_num}
	</select>
</mapper> 